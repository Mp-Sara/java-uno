/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.enchds.uno;

import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author
 */
public class GameSP extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form UNO
     */
    public GameSP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("UNO Game Applet");
        setMinimumSize(new java.awt.Dimension(750, 355));

        jLabel2.setText("This server does not exist.");

        jLabel3.setText("Current Scores:");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(1);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(775, 160));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(775, 160));
        jScrollPane2.setSize(new java.awt.Dimension(775, 160));

        jLayeredPane1.setMinimumSize(new java.awt.Dimension(0, 160));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(776, 160));
        jLayeredPane1.setSize(new java.awt.Dimension(776, 160));
        jLayeredPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLayeredPane1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 776, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jLayeredPane1);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        jLabel1.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLayeredPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLayeredPane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayeredPane1MousePressed
        if (evt.getY() < 5 || evt.getY() > 125) return;
        int x = evt.getX();
        if (x % 85 < 5) return;
        cards.forEach((JLabel card) -> {
            card.setText("");
        });
        jLayeredPane1.removeAll();
        cards.clear();
        jLayeredPane1.repaint();
        x /= 85;
        if (UNO.os != null) {
            UNO.os.println(x);
            UNO.os.flush();
        } else UNO.out = Integer.toString(x);
    }//GEN-LAST:event_jLayeredPane1MousePressed

    class SPThread extends Thread {
        @Override
        public void run() {
            jLabel3.setText(UNO.lang.getOrDefault("Scores", "Scores"));
            JLabel jLabel4 = new JLabel();
            jLabel4.setSize(80, 120);
            jLabel4.setLocation(0, 0);
            jLabel4.setOpaque(false);
            jLayeredPane2.add(jLabel4);
            JLabel jLabel5 = new JLabel();
            jLabel5.setSize(80, 120);
            jLabel5.setLocation(0, 0);
            jLabel5.setOpaque(false);
            jLayeredPane2.add(jLabel5);
            while (isAlive()) {
                try {
                    if (UNO.is != null)
                        do UNO.line = UNO.is.readLine();
                        while (UNO.line == null);
                    else while (UNO.line == null) System.out.print("");
                    if (UNO.line.startsWith("MSG:DESC:"))
                        jLabel1.setText("\"" + UNO.line.replace("MSG:DESC:", "") + "\"");
                    else if (UNO.line.startsWith("MSG:NAME:")) UNO.names = UNO.line.replace("MSG:NAME:", "").split("-");
                    else if (UNO.line.startsWith("MSG:HAND:")) {
                        cards.forEach((JLabel card) -> {
                            card.setText("");
                        });
                        jLayeredPane1.removeAll();
                        cards.clear();
                        jLayeredPane1.repaint();
                        for (int i = 0; i < UNO.line.replace("MSG:HAND:", "").split("-").length; i++) {
                            jLayeredPane1.setPreferredSize(new Dimension(Math.max(85 * i + 90,
                                    (int) jScrollPane2.getSize().getWidth() + 1), 130));
                            File res = null;
                            if (UNO.line.replace("MSG:HAND:", "").split("-")[i].split(" ").length == 2) res = new File(new File("RESOURCE", 
                                    UNO.line.replace("MSG:HAND:", "").split("-")[i].split(" ")[0].toUpperCase()),
                                    UNO.line.replace("MSG:HAND:", "").split("-")[i].split(" ")[1].toUpperCase() + ".PNG");
                            if (res != null && res.isFile()) {
                                jLayeredPane1.setPreferredSize(new Dimension(Math.max(85 * i + 90,
                                        (int) jScrollPane2.getSize().getWidth() + 1), 130));
                                cards.add(0, new JLabel("<html><body><img src=\"" + res.toURI().toURL()
                                        + "\" width=80 height=120 /></body></html>"));
                                cards.get(0).setSize(80, 120);
                                cards.get(0).setLocation(85 * i + 5, 5);
                                cards.get(0).setOpaque(false);
                            } else
                            for (String split : UNO.line.replace("MSG:HAND:", "").split("-")[i].split(" ")) {
                                try {
                                    URL url = GameSP.class.getResource("/com/enchds/uno/resources/" + split + ".PNG");
                                    res = new File("RESOURCE", split.toUpperCase() + ".PNG");
                                    if (res.isFile())
                                        url = res.toURI().toURL();
                                    cards.add(0, new JLabel("<html><body><img src=\"" + url.toString()
                                            + "\" width=80 height=120 /></body></html>"));
                                    cards.get(0).setSize(80, 120);
                                    cards.get(0).setLocation(85 * i + 5, 5);
                                    cards.get(0).setOpaque(false);
                                    jLayeredPane1.add(cards.get(0));
                                } catch (NullPointerException exc) {
                                    System.err.println(UNO.lang.getOrDefault("NullError", "NullError"));
                                }
                            }
                        }
                    } else if (UNO.line.startsWith("MSG:")) {
                        if (UNO.line.startsWith("MSG:NewPlayer")) {
                            UNO.line = UNO.lang.getOrDefault("NewPlayer", "NewPlayer")
                                    .replaceFirst("%1", Integer.toString(
                                            Integer.parseInt(UNO.line.substring(UNO.line.length() - 4,
                                                    UNO.line.length() - 2))))
                                    .replaceFirst("%2", Integer.toString(
                                            Integer.parseInt(UNO.line.substring(UNO.line.length() - 2))));
                            jLabel2.setText(UNO.line);
                            continue;
                        } else if (UNO.line.startsWith("MSG:NextTurn")) {
                            UNO.line = UNO.lang.getOrDefault("NextTurn", "NextTurn")
                                    .replaceFirst("%", UNO.names[Integer.parseInt(UNO.line.substring(UNO.line.length() - 2))]);
                            jLabel2.setText(UNO.line);
                            continue;
                        }
                        UNO.lang.entrySet().forEach((Entry<String, String> entry) -> {
                            UNO.line = UNO.line.replace(entry.getKey(), entry.getValue());
                        });
                        if (UNO.line.contains("%")) {
                            try {
                                UNO.line = UNO.line.replaceFirst("%",
                                        Integer.toString(Integer.parseInt(UNO.line.substring(UNO.line.length() - 2)) + 1));
                                UNO.line = UNO.line.substring(0, UNO.line.length() - 2);
                            } catch (NumberFormatException exc) {
                                System.err.println(UNO.lang.getOrDefault("BadPerCent", "BadPerCent"));
                            }
                        }
                        jLabel2.setText(UNO.line.replace("MSG:", ""));
                        cards.forEach((JLabel card) -> {
                            card.setText("");
                        });
                        jLayeredPane1.removeAll();
                        cards.clear();
                        jLayeredPane1.repaint();
                    } else if (UNO.line.startsWith("CARD:")) {
                        File res = null;
                        if (UNO.line.replace("CARD:", "").split(" ").length == 2) res = new File(new File(UNO.resName, 
                                UNO.line.replace("CARD:", "").split(" ")[0].toUpperCase()),
                                UNO.line.replace("CARD:", "").split(" ")[1].toUpperCase() + ".PNG");
                        if (res != null && res.isFile()) {
                            jLabel4.setText("<html><body><img src=\"" + res.toURI().toURL().toString()
                                    + "\" width=80 height=120 /></body></html>");
                            jLabel5.setText("");
                        } else {
                            try {
                                URL url = UNO.class.getResource("/com/enchds/uno/resources/"
                                        + UNO.line.replace("CARD:", "").split(" ")[0] + ".PNG");
                                res = new File(UNO.resName, UNO.line.replace("CARD:", "").split(" ")[0]
                                        .toUpperCase() + ".PNG");
                                if (res.isFile()) url = res.toURI().toURL();
                                jLabel4.setText("<html><body><img src=\"" + url.toString()
                                        + "\" width=80 height=120 /></body></html>");
                            } catch (NullPointerException exc) {
                                System.err.println(UNO.lang.getOrDefault("NullError", "NullError"));
                            }
                        }
                        if (UNO.line.replace("CARD:", "").split(" ").length == 2)
                            try {
                                URL url = UNO.class.getResource("/com/enchds/uno/resources/"
                                        + UNO.line.replace("CARD:", "").split(" ")[1] + ".PNG");
                                res = new File(UNO.resName, UNO.line.replace("CARD:", "").split(" ")[1]
                                        .toUpperCase() + ".PNG");
                                if (res.isFile()) url = res.toURI().toURL();
                                jLabel5.setText("<html><body><img src=\"" + url.toString()
                                        + "\" width=80 height=120 /></body></html>");
                            } catch (MalformedURLException e) {
                                System.err.println(UNO.lang.getOrDefault("UrlError", "UrlError"));
                            }
                    } else if (UNO.line.startsWith("SCORE:")) {
                        HashMap<String, Integer> scores = new HashMap<>(UNO.line.substring(6).split("-").length);
                        for (int i = 0; i < UNO.line.substring(6).split("-").length; i++)
                            scores.put(Integer.parseInt(UNO.line.substring(6).split("-")[i]) + ":" + i, i);
                        String scoreList = "";
                        for (int i = scores.size() - 1; i >= 0; i--) {
                            scoreList += UNO.lang.getOrDefault("ScoreEntry", "ScoreEntry")
                                .replaceFirst("%1", Integer.toString(scores.size() - i))
                                .replaceFirst("%2", UNO.names[scores.get(scores.keySet().toArray()[i].toString())])
                                .replaceFirst("%3", scores.keySet().toArray()[i].toString().split(":")[0]) + "\n";
                        }
                        jTextArea1.setText(scoreList);
                    } else {
                        String msg = UNO.line.split("/")[0];
                        for (Entry<String, String> entry : UNO.lang.entrySet())
                            msg = msg.replace(entry.getKey(), entry.getValue());
                        jLabel2.setText(msg);
                        cards.forEach((JLabel card) -> {
                            card.setText("");
                        });
                        jLayeredPane1.removeAll();
                        cards.clear();
                        jLayeredPane1.repaint();
                        for (int i = 0; i < UNO.line.split("/")[1].split("-").length; i++) {
                            jLayeredPane1.setPreferredSize(new Dimension(Math.max(85 * i + 90,
                                    (int) jScrollPane2.getSize().getWidth() + 1), 130));
                            File res = null;
                            if (UNO.line.split("/")[1].split("-")[i].split(" ").length == 2) res = new File(new File("RESOURCE", 
                                    UNO.line.split("/")[1].split("-")[i].split(" ")[0].toUpperCase()),
                                    UNO.line.split("/")[1].split("-")[i].split(" ")[1].toUpperCase() + ".PNG");
                            if (res != null && res.isFile()) {
                                jLayeredPane1.setPreferredSize(new Dimension(Math.max(85 * i + 90,
                                        (int) jScrollPane2.getSize().getWidth() + 1), 130));
                                cards.add(0, new JLabel("<html><body><img src=\"" + res.toURI().toURL()
                                        + "\" width=80 height=120 /></body></html>"));
                                cards.get(0).setSize(80, 120);
                                cards.get(0).setLocation(85 * i + 5, 5);
                                cards.get(0).setOpaque(false);
                            } else
                            for (String split : UNO.line.split("/")[1].split("-")[i].split(" ")) {
                                try {
                                    URL url = GameSP.class.getResource("/com/enchds/uno/resources/" + split + ".PNG");
                                    res = new File("RESOURCE", split.toUpperCase() + ".PNG");
                                    if (res.isFile())
                                        url = res.toURI().toURL();
                                    cards.add(0, new JLabel("<html><body><img src=\"" + url.toString()
                                            + "\" width=80 height=120 /></body></html>"));
                                    cards.get(0).setSize(80, 120);
                                    cards.get(0).setLocation(85 * i + 5, 5);
                                    cards.get(0).setOpaque(false);
                                    jLayeredPane1.add(cards.get(0));
                                } catch (NullPointerException exc) {
                                    System.err.println(UNO.lang.getOrDefault("NullError", "NullError"));
                                }
                            }
                        }
                    }
                    if (UNO.is == null) UNO.line = null;
                } catch (IOException exc) {
                    Logger.getLogger(GameSP.class.getName()).log(Level.SEVERE, null, exc);
                }
            }
        }
    }
    
    private final ArrayList<JLabel> cards = new ArrayList<>();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}